# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-26 03:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('idestado', models.CharField(db_column='idEstado', max_length=255, primary_key=True, serialize=False)),
                ('nombreestado', models.CharField(db_column='nombreEstado', max_length=255)),
            ],
            options={
                'db_table': 'estado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Etnia',
            fields=[
                ('idetnia', models.AutoField(db_column='idEtnia', primary_key=True, serialize=False)),
                ('nombreetnia', models.CharField(blank=True, db_column='nombreEtnia', max_length=255, null=True, verbose_name='Etnia')),
            ],
            options={
                'db_table': 'etnia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('idmunicipiocompleto', models.CharField(db_column='idMunicipioCompleto', max_length=255, primary_key=True, serialize=False)),
                ('idmunicipio', models.CharField(db_column='idMunicipio', max_length=255)),
                ('nombremunicipio', models.CharField(db_column='nombreMunicipio', max_length=255)),
            ],
            options={
                'db_table': 'municipio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parroquia',
            fields=[
                ('idparroquiacompleto', models.CharField(db_column='idParroquiaCompleto', max_length=255, primary_key=True, serialize=False)),
                ('idestadoprroquia', models.CharField(db_column='idEstadoPrroquia', max_length=255)),
                ('idmunicipioparroquia', models.CharField(db_column='idMunicipioParroquia', max_length=255)),
                ('idparroquia', models.CharField(db_column='idParroquia', max_length=255)),
                ('nombreparroquia', models.CharField(db_column='nombreParroquia', max_length=255)),
            ],
            options={
                'db_table': 'parroquia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comunidad',
            fields=[
                ('idcomunidad', models.IntegerField(db_column='idComunidad', primary_key=True, serialize=False, verbose_name='R.I.F. Consejo Comunal')),
                ('nombrecomunidad', models.CharField(blank=True, db_column='nombreComunidad', max_length=255, null=True, verbose_name='Nombre Consejo Comunal')),
                ('poligonal', models.TextField(blank=True, db_column='poligonal', null=True, verbose_name='Coordenadas poligonal')),
                ('nombrevia', models.CharField(blank=True, db_column='nombreVia', max_length=255, null=True, verbose_name='Nombre de la v\xeda')),
                ('nombrelocalidad', models.CharField(blank=True, db_column='nombreLocalidad', max_length=255, null=True, verbose_name='Nombre de la localidad')),
                ('nombrelocal', models.CharField(blank=True, db_column='nombreLocal', max_length=255, null=True, verbose_name='Nombre del local')),
                ('pisolocal', models.CharField(blank=True, db_column='pisoLocal', max_length=255, null=True, verbose_name='Piso del local')),
                ('numerolocal', models.CharField(blank=True, db_column='numeroLocal', max_length=255, null=True, verbose_name='N\xfamero/nombre del local')),
                ('referencialocal', models.CharField(blank=True, db_column='referenciaLocal', max_length=255, null=True, verbose_name='Referencia')),
                ('coordenadas', models.CharField(blank=True, db_column='coordenadas', max_length=255, null=True, verbose_name='Coordenadas ubicaci\xf3n')),
                ('centrocoordenadas', models.CharField(blank=True, db_column='centroCoordenadas', max_length=255, null=True, verbose_name='Centro de coordenadas')),
                ('parroquia', models.ForeignKey(blank=True, db_column='idParroquia', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Parroquia', verbose_name='Parroquia')),
            ],
            options={
                'default_permissions': (('view_comunidad', 'Can view Comunidad'),),
                'db_table': 'comunidad',
                'verbose_name': 'Comunidad',
                'verbose_name_plural': 'Comunidades',
            },
        ),
        migrations.CreateModel(
            name='Condicionfisicavivienda',
            fields=[
                ('idcondicionfisicavivienda', models.IntegerField(db_column='idCondicionFisicaVivienda', primary_key=True, serialize=False)),
                ('nombrecondicionfisicavivienda', models.CharField(blank=True, db_column='nombreCondicionFisicaVivienda', max_length=255, null=True)),
            ],
            options={
                'db_table': 'condicionFisicaVivienda',
                'verbose_name': 'Condicion F\xedsicasica de la Vivienda',
                'verbose_name_plural': 'Condiciones F\xedsicas de la Vivienda',
            },
        ),
        migrations.CreateModel(
            name='Discapacidad',
            fields=[
                ('iddiscapacidad', models.AutoField(db_column='idDiscapacidad', primary_key=True, serialize=False)),
                ('nombrediscapacidad', models.CharField(blank=True, db_column='nombreDiscapacidad', max_length=255, null=True)),
            ],
            options={
                'ordering': ['tipodiscapacidad', 'nombrediscapacidad'],
                'db_table': 'discapacidad',
                'verbose_name': 'Discapacidad',
                'verbose_name_plural': 'Discapacidades',
            },
        ),
        migrations.CreateModel(
            name='Gradoinstruccion',
            fields=[
                ('idgradoinstruccion', models.AutoField(db_column='idGradoInstruccion', primary_key=True, serialize=False)),
                ('nombregradoinstruccion', models.CharField(blank=True, db_column='nombreGradoInstruccion', max_length=255, null=True)),
            ],
            options={
                'db_table': 'gradoInstruccion',
            },
        ),
        migrations.CreateModel(
            name='Hogar',
            fields=[
                ('idhogar', models.AutoField(db_column='idHogar', primary_key=True, serialize=False)),
                ('nombrehogar', models.CharField(blank=True, db_column='nombreHogar', max_length=255, null=True, verbose_name='Nombre familia')),
            ],
            options={
                'db_table': 'hogar',
                'verbose_name': 'Hogar',
                'verbose_name_plural': 'Hogares',
            },
        ),
        migrations.CreateModel(
            name='Miembrohogar',
            fields=[
                ('idmiembrohogar', models.AutoField(db_column='idMiembroHogar', primary_key=True, serialize=False)),
                ('hogar', models.ForeignKey(blank=True, db_column='idHogar', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Hogar')),
            ],
            options={
                'db_table': 'miembroHogar',
                'verbose_name': 'Miembro de hogar',
                'verbose_name_plural': 'Miembros de hogar',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('idpais', models.AutoField(db_column='idPais', max_length=3, primary_key=True, serialize=False)),
                ('codisopais', models.CharField(blank=True, db_column='codISOPais', max_length=3, null=True)),
                ('nombrepais', models.CharField(blank=True, db_column='nombrePais', max_length=255, null=True)),
                ('nombrepaisiso', models.CharField(blank=True, db_column='nombreISOPais', max_length=255, null=True)),
                ('codisopaisalfa2', models.CharField(blank=True, db_column='codISOPaisAlfa2', max_length=2, null=True)),
                ('codisopaisalfa3', models.CharField(blank=True, db_column='codISOPaisAlfa3', max_length=3, null=True)),
            ],
            options={
                'db_table': 'pais',
            },
        ),
        migrations.CreateModel(
            name='Parentesco',
            fields=[
                ('idparentesco', models.AutoField(db_column='idParentesco', primary_key=True, serialize=False)),
                ('nombreparentesco', models.CharField(blank=True, db_column='nombreParentesco', max_length=255, null=True)),
                ('ordenparentesco', models.IntegerField(blank=True, db_column='ordenParentesco', null=True)),
            ],
            options={
                'ordering': ['ordenparentesco'],
                'db_table': 'parentesco',
            },
        ),
        migrations.CreateModel(
            name='Patologia',
            fields=[
                ('idpatologia', models.AutoField(db_column='idPatologia', primary_key=True, serialize=False)),
                ('nombrepatologia', models.CharField(blank=True, db_column='nombrePatologia', max_length=255, null=True, verbose_name='Nombre')),
                ('descripcionpatologia', models.CharField(blank=True, db_column='descripcionPatologia', max_length=255, null=True, verbose_name='Descripci\xf3n')),
            ],
            options={
                'ordering': ['nombrepatologia'],
                'db_table': 'patologia',
                'verbose_name': 'Patolog\xeda',
                'verbose_name_plural': 'Patolog\xedas',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('idpersona', models.AutoField(db_column='idPersona', primary_key=True, serialize=False)),
                ('rif', models.CharField(blank=True, db_column='rif', max_length=255, null=True, verbose_name='R.I.F.')),
                ('letracedulaidentidad', models.CharField(choices=[('V', 'V'), ('E', 'E')], db_column='letraCedulaIdentidad', default='V', max_length=1)),
                ('cedulaidentidad', models.IntegerField(db_column='cedulaIdentidad', unique=True, verbose_name='C\xe9dula de Identidad')),
                ('nombre', models.CharField(db_column='nombre', max_length=255, verbose_name='Primer Nombre')),
                ('otrosnombres', models.CharField(blank=True, db_column='otrosNombres', max_length=255, null=True, verbose_name='Otros Nombres')),
                ('apellido', models.CharField(db_column='apellido', max_length=255, verbose_name='Primer Apellido')),
                ('otrosapellidos', models.CharField(blank=True, db_column='otrosApellidos', max_length=255, null=True, verbose_name='Otros Apellidos')),
                ('telefono', models.CharField(blank=True, db_column='telefono', max_length=255, null=True, verbose_name='Tel\xe9fono Local')),
                ('celular', models.CharField(blank=True, db_column='celular', max_length=255, null=True, verbose_name='Tel\xe9fono Celular')),
                ('email', models.EmailField(blank=True, db_column='email', max_length=255, null=True, verbose_name='Correo Electr\xf3nico')),
                ('twitter', models.CharField(blank=True, db_column='twitter', max_length=255, null=True, verbose_name='Twitter')),
                ('fechanacimiento', models.DateField(blank=True, db_column='fechaNacimiento', null=True, verbose_name='Fecha de Nacimiento')),
                ('sexo', models.CharField(choices=[('F', 'FEMENINO'), ('M', 'MASCULINO')], db_column='sexo', max_length=255, verbose_name='Sexo')),
                ('fecharegistro', models.DateField(db_column='fechaRegistro', default=b'2016-11-26', verbose_name='Fecha de Registro')),
                ('pasaporte', models.CharField(blank=True, db_column='pasaporte', max_length=255, null=True, verbose_name='Pasaporte')),
                ('foto', models.ImageField(blank=True, db_column='foto', null=True, upload_to='foto', verbose_name='Foto')),
                ('cne', models.CharField(blank=True, db_column='cne', max_length=255, null=True, verbose_name='CNE')),
            ],
            options={
                'db_table': 'persona',
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
            },
        ),
        migrations.CreateModel(
            name='Tipoapoyo',
            fields=[
                ('idtipoapoyo', models.AutoField(db_column='idTipoApoyo', primary_key=True, serialize=False)),
                ('nombretipoapoyo', models.CharField(blank=True, db_column='nombreTipoApoyo', max_length=255, null=True)),
                ('descripciontipoapoyo', models.CharField(blank=True, db_column='descripcionTipoApoyo', max_length=255, null=True)),
            ],
            options={
                'ordering': ['nombretipoapoyo'],
                'db_table': 'tipoApoyo',
                'verbose_name': 'Tipo de Apoyo',
                'verbose_name_plural': 'Tipos de Apoyo',
            },
        ),
        migrations.CreateModel(
            name='Tipocomunidad',
            fields=[
                ('idtipocomunidad', models.AutoField(db_column='idTipoComunidad', primary_key=True, serialize=False)),
                ('nombretipocomunidad', models.CharField(blank=True, db_column='nombreTipoComunidad', max_length=255, null=True)),
            ],
            options={
                'ordering': ['nombretipocomunidad'],
                'db_table': 'tipoComunidad',
                'verbose_name': 'Tipo de Comunidad',
                'verbose_name_plural': 'Tipos de Comunidad',
            },
        ),
        migrations.CreateModel(
            name='Tipodiscapacidad',
            fields=[
                ('idtipodiscapacidad', models.AutoField(db_column='idTipoDiscapacidad', primary_key=True, serialize=False)),
                ('nombretipodiscapacidad', models.CharField(blank=True, db_column='nombreTipoDiscapacidad', max_length=255, null=True)),
            ],
            options={
                'ordering': ['nombretipodiscapacidad'],
                'db_table': 'tipoDiscapacidad',
                'verbose_name': 'Tipo de Discapacidad',
                'verbose_name_plural': 'Tipos de Discapacidad',
            },
        ),
        migrations.CreateModel(
            name='Tipolocalidad',
            fields=[
                ('idtipolocalidad', models.IntegerField(db_column='idTipoLocalidad', primary_key=True, serialize=False)),
                ('nombretipolocalidad', models.CharField(blank=True, db_column='nombreTipoLocalidad', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tipoLocalidad',
                'verbose_name': 'Tipo de Localidad',
                'verbose_name_plural': 'Tipos de Localidad',
            },
        ),
        migrations.CreateModel(
            name='Tipopropiedadvivienda',
            fields=[
                ('idtipopropiedadvivienda', models.AutoField(db_column='idTipoPropiedadVivienda', primary_key=True, serialize=False)),
                ('nombretipopropiedadvivienda', models.CharField(blank=True, db_column='nombreTipoPropiedadVivienda', max_length=255, null=True)),
            ],
            options={
                'ordering': ['nombretipopropiedadvivienda'],
                'db_table': 'tipoPropiedadVivienda',
            },
        ),
        migrations.CreateModel(
            name='Tipovia',
            fields=[
                ('idtipovia', models.IntegerField(db_column='idTipoVia', primary_key=True, serialize=False)),
                ('nombretipovia', models.CharField(blank=True, db_column='nombreTipoVia', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tipoVia',
                'verbose_name': 'Tipo de V\xeda',
                'verbose_name_plural': 'Tipos de V\xeda',
            },
        ),
        migrations.CreateModel(
            name='Tipovivienda',
            fields=[
                ('idtipovivienda', models.IntegerField(db_column='idTipoVivienda', primary_key=True, serialize=False)),
                ('nombretipovivienda', models.CharField(blank=True, db_column='nombreTipoVivienda', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tipoVivienda',
                'verbose_name': 'Tipo de Vivienda',
                'verbose_name_plural': 'Tipos de Viviendas',
            },
        ),
        migrations.CreateModel(
            name='Vivienda',
            fields=[
                ('idvivienda', models.AutoField(db_column='idVivienda', primary_key=True, serialize=False)),
                ('nombrevivienda', models.CharField(db_column='nombreVivienda', max_length=255, verbose_name='Nombre de la vivienda')),
                ('piso', models.CharField(blank=True, db_column='piso', max_length=255, null=True, verbose_name='Piso de la ')),
                ('apartamento', models.CharField(blank=True, db_column='apartamento', max_length=255, null=True, verbose_name='Apartamento')),
                ('nombrevia', models.CharField(blank=True, db_column='nombreVia', max_length=255, null=True, verbose_name='Nombre de la v\xeda')),
                ('nombrelocalidad', models.CharField(blank=True, db_column='nombreLocalidad', max_length=255, null=True, verbose_name='Nombre localidad')),
                ('metroscuadrados', models.FloatField(blank=True, db_column='metrosCuadrados', null=True, verbose_name='Metros cuadrados')),
                ('numerohabitaciones', models.IntegerField(blank=True, db_column='numeroHabitaciones', null=True, verbose_name='Cant. de habitaciones')),
                ('numerobanos', models.IntegerField(blank=True, db_column='numeroBanos', null=True, verbose_name='Cant. de ba\xf1os')),
                ('condicionfisica', models.ForeignKey(blank=True, db_column='condicionFisica', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Condicionfisicavivienda', verbose_name='Condici\xf3n F\xedsica')),
                ('tipolocalidad', models.ForeignKey(db_column='idTipoLocalidad', on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipolocalidad', verbose_name='Tipo de localidad')),
                ('tipovia', models.ForeignKey(db_column='idTipoVia', on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipovia', verbose_name='Tipo de v\xeda')),
                ('tipovivienda', models.ForeignKey(db_column='idTipoVivienda', on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipovivienda', verbose_name='Tipo de vivienda')),
            ],
            options={
                'ordering': ['nombrevivienda', 'piso', 'apartamento'],
                'db_table': 'vivienda',
                'verbose_name': 'Vivienda',
                'verbose_name_plural': 'Viviendas',
            },
        ),
        migrations.CreateModel(
            name='Vocero',
            fields=[
                ('idvocero', models.AutoField(db_column='idVocero', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vocero',
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('idzona', models.AutoField(db_column='idZona', primary_key=True, serialize=False)),
                ('nombrezona', models.CharField(blank=True, db_column='nombreZona', max_length=255, null=True, verbose_name='Nombre de la zona')),
                ('descripcion', models.TextField(blank=True, db_column='descripcion', null=True, verbose_name='Descripci\xf3n de la zona')),
                ('comunidad', models.ForeignKey(blank=True, db_column='idComunidad', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Comunidad', verbose_name='Comunidad')),
            ],
            options={
                'ordering': ['comunidad', 'nombrezona'],
                'db_table': 'zona',
                'verbose_name': 'Zona de la Comunidad',
                'verbose_name_plural': 'Zonas de la Comunidad',
            },
        ),
        migrations.CreateModel(
            name='Salud',
            fields=[
                ('persona', models.OneToOneField(db_column='idPersona', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='demografia.Persona', verbose_name='Persona')),
                ('conapdis', models.CharField(blank=True, db_column='conapdis', default=None, max_length=255, null=True, verbose_name='Certicado CONAPDIS')),
                ('mtlp', models.BooleanField(db_column='mtlp', default=False, verbose_name='MTLP')),
                ('alcoholismo', models.BooleanField(db_column='alcoholismo', default=False, verbose_name='Alcoholismo')),
                ('tabaquismo', models.BooleanField(db_column='tabaquismo', default=False, verbose_name='Tabaquismo')),
                ('drogas', models.BooleanField(db_column='drogas', default=False, verbose_name='Otras drogas')),
            ],
            options={
                'db_table': 'salud',
                'verbose_name': 'Perfil de Salud',
                'verbose_name_plural': 'Perfiles de Salud',
            },
        ),
        migrations.AddField(
            model_name='vocero',
            name='persona',
            field=models.OneToOneField(blank=True, db_column='idPersona', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Persona'),
        ),
        migrations.AddField(
            model_name='vocero',
            name='zona',
            field=models.ForeignKey(blank=True, db_column='idZona', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Zona'),
        ),
        migrations.AddField(
            model_name='vivienda',
            name='zona',
            field=models.ForeignKey(db_column='idZona', on_delete=django.db.models.deletion.PROTECT, to='demografia.Zona', verbose_name='Comunidad'),
        ),
        migrations.AddField(
            model_name='persona',
            name='authuser',
            field=models.OneToOneField(blank=True, db_column='authuser', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='persona',
            name='conyuge',
            field=models.ForeignKey(blank=True, db_column='conyuge', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idConyuge', to='demografia.Persona', verbose_name='Conyuge'),
        ),
        migrations.AddField(
            model_name='persona',
            name='etnia',
            field=models.ForeignKey(blank=True, db_column='etnia', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Etnia', verbose_name='Etnia'),
        ),
        migrations.AddField(
            model_name='persona',
            name='madre',
            field=models.ForeignKey(blank=True, db_column='madre', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idMadre', to='demografia.Persona', verbose_name='Madre'),
        ),
        migrations.AddField(
            model_name='persona',
            name='padre',
            field=models.ForeignKey(blank=True, db_column='padre', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idPadre', to='demografia.Persona', verbose_name='Padre'),
        ),
        migrations.AddField(
            model_name='persona',
            name='paisnacimiento',
            field=models.ForeignKey(blank=True, db_column='paisNacimiento', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Pais', verbose_name='Pa\xeds de Nacimiento'),
        ),
        migrations.AddField(
            model_name='miembrohogar',
            name='parentesco',
            field=models.ForeignKey(blank=True, db_column='idParentesco', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Parentesco', verbose_name='Parentesco'),
        ),
        migrations.AddField(
            model_name='miembrohogar',
            name='persona',
            field=models.OneToOneField(db_column='idPersona', on_delete=django.db.models.deletion.PROTECT, to='demografia.Persona', verbose_name='Persona'),
        ),
        migrations.AddField(
            model_name='hogar',
            name='tipopropiedadvivienda',
            field=models.ForeignKey(blank=True, db_column='idTipoPropiedadVivienda', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipopropiedadvivienda', verbose_name='Tipo de Propiedad'),
        ),
        migrations.AddField(
            model_name='hogar',
            name='vivienda',
            field=models.ForeignKey(blank=True, db_column='idVivienda', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Vivienda', verbose_name='Vivienda'),
        ),
        migrations.AddField(
            model_name='discapacidad',
            name='tipodiscapacidad',
            field=models.ForeignKey(blank=True, db_column='idTipoDiscapacidad', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipodiscapacidad'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='tipocomunidad',
            field=models.ForeignKey(blank=True, db_column='idTipoComunidad', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipocomunidad', verbose_name='Tipo de Comunidad'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='tipolocal',
            field=models.ForeignKey(blank=True, db_column='idTipoLocal', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipovivienda', verbose_name='Tipo de local'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='tipolocalidad',
            field=models.ForeignKey(blank=True, db_column='idTipoLocalidad', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipolocalidad', verbose_name='Tipo de localidad'),
        ),
        migrations.AddField(
            model_name='comunidad',
            name='tipovia',
            field=models.ForeignKey(blank=True, db_column='idTipoVia', null=True, on_delete=django.db.models.deletion.PROTECT, to='demografia.Tipovia', verbose_name='Tipo de v\xeda'),
        ),
        migrations.AddField(
            model_name='salud',
            name='cuidador',
            field=models.ForeignKey(blank=True, db_column='cuidador', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='demografia.Persona', verbose_name='Gu\xeda / Cuidadador'),
        ),
        migrations.AddField(
            model_name='salud',
            name='discapacidad',
            field=models.ManyToManyField(blank=True, db_column='idDiscapacidad', to='demografia.Discapacidad', verbose_name='Discapacidad(es)'),
        ),
        migrations.AddField(
            model_name='salud',
            name='patologia',
            field=models.ManyToManyField(blank=True, db_column='idPatologia', to='demografia.Patologia', verbose_name='Patolog\xedas'),
        ),
        migrations.AddField(
            model_name='salud',
            name='tipoapoyo',
            field=models.ManyToManyField(blank=True, db_column='idTipoApoyo', to='demografia.Tipoapoyo', verbose_name='Tipo de apoyo'),
        ),
    ]
